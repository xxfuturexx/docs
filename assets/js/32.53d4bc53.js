(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{417:function(t,a,s){"use strict";s.r(a);var n=s(54),_=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"php基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php基础"}},[t._v("#")]),t._v(" PHP基础")]),t._v(" "),s("h2",{attrs:{id:"php-基础语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-基础语法"}},[t._v("#")]),t._v(" php 基础语法")]),t._v(" "),s("ul",[s("li",[t._v("脚本语言")])]),t._v(" "),s("h3",{attrs:{id:"php-标记-php-引擎识别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-标记-php-引擎识别"}},[t._v("#")]),t._v(" php 标记（php 引擎识别）")]),t._v(" "),s("ul",[s("li",[t._v("\n<?php 起始标记 php 代码 结束标记 ?>，如果只有 php 代码可不用结束标记\n")]),t._v(" "),s("li",[t._v("注释;//单行简单描述 /"),s("em",[t._v("多行注释")]),t._v("/复杂描述")]),t._v(" "),s("li",[t._v("语句结束符;")])]),t._v(" "),s("h3",{attrs:{id:"php-基础知识"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-基础知识"}},[t._v("#")]),t._v(" php 基础知识")]),t._v(" "),s("h4",{attrs:{id:"php-变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-变量"}},[t._v("#")]),t._v(" php 变量")]),t._v(" "),s("ul",[s("li",[t._v("以$符号开头：$name")]),t._v(" "),s("li",[t._v("输出变量：echo、print_r()、var_dump()")]),t._v(" "),s("li",[t._v("删除变量：unset（变量）")]),t._v(" "),s("li",[t._v("变量命名规则同其他语言")]),t._v(" "),s("li",[t._v("驼峰法命名，除第一个单词首字母大写，复杂变量建议下划线开头，区分大小写")])]),t._v(" "),s("h4",{attrs:{id:"预定义变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#预定义变量"}},[t._v("#")]),t._v(" 预定义变量")]),t._v(" "),s("ul",[s("li",[t._v("预定义变量都是数组共 9 个")]),t._v(" "),s("li",[t._v("$_GET 通过 get 提交的 shuj")]),t._v(" "),s("li",[t._v("$_POST 通过 post 提交的数据")]),t._v(" "),s("li",[t._v("$_REQUEST 通过 get 和 post 提交的数据")]),t._v(" "),s("li",[t._v("$_SERVER 用户和服务器的基本信息数据，系统定义好的")]),t._v(" "),s("li",[t._v("$_FILES 用户提交的文件数据")]),t._v(" "),s("li",[t._v("$_SESSION session 数据")]),t._v(" "),s("li",[t._v("$_COOKIE cookie 数据")]),t._v(" "),s("li",[t._v("$GLOBALS 所有全局变量，也是唯一一个表示以下划线开始的预定义变量")]),t._v(" "),s("li",[t._v("$_ENV 环境数据")]),t._v(" "),s("li",[t._v("明确数据在哪个预定义变量中")])]),t._v(" "),s("h4",{attrs:{id:"变量传值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量传值"}},[t._v("#")]),t._v(" 变量传值")]),t._v(" "),s("ul",[s("li",[t._v("值传递，数据传递，赋值给新变量")]),t._v(" "),s("li",[t._v("引用传递，变量地址传递，一个地址多个变量名：$d=&$c,变量 d、c 公用一个地址")])]),t._v(" "),s("h4",{attrs:{id:"常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[t._v("#")]),t._v(" 常量")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("不变的数据,不能修改和删除")])]),t._v(" "),s("li",[s("p",[t._v("常量通常为大写字母")])]),t._v(" "),s("li",[s("p",[t._v("不可改变数值")])]),t._v(" "),s("li",[s("p",[t._v("只有定义和使用")])]),t._v(" "),s("li",[s("p",[t._v("定义常量 使用 define（'常量名'，常量值）")])]),t._v(" "),s("li",[s("p",[t._v("定义常量 const 常量名=值")])]),t._v(" "),s("li",[s("p",[t._v("访问常量：直接使用常量名、constant（'常量名'）")])]),t._v(" "),s("li",[s("p",[t._v("定义数组常量 php7+")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MATH")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PI'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.14")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\necho "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MATH")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PI'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n        Copied"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    \n")])])]),s("p",[t._v("1\n2\n3\n4")])])]),t._v(" "),s("h4",{attrs:{id:"系统常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统常量"}},[t._v("#")]),t._v(" 系统常量")]),t._v(" "),s("ul",[s("li",[t._v("固定的系统常量：固定值\n"),s("ul",[s("li",[t._v("PHP_VERSION 版本号")]),t._v(" "),s("li",[t._v("PHP_INT_SIZE：php 中整数占用的字节")]),t._v(" "),s("li",[t._v("PHP_INT_MAX：php 中整数表示的最大值")])])]),t._v(" "),s("li",[t._v("魔术常量：值在使用情况下会不同\n"),s("ul",[s("li",[t._v("__DIR__当前文件所在绝对路径")]),t._v(" "),s("li",[t._v("__FILE__当前文件绝对路径（带有文件名）")]),t._v(" "),s("li",[t._v("__LINE__当前代码所在行号")]),t._v(" "),s("li",[t._v("__FUNCTION__函数内部使用，表示当前函数的名字")]),t._v(" "),s("li",[t._v("__CLASS__类内部方法里使用，表示当前类名")]),t._v(" "),s("li",[t._v("__METHOD__类内部方法里使用，表示当前方法名（带类名）")]),t._v(" "),s("li",[t._v("__NAMESPACE__当前所属命名空间的名字")])])])]),t._v(" "),s("h4",{attrs:{id:"数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),s("blockquote",[s("p",[t._v("三大类八小类")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("基本数据类型")]),t._v(" "),s("ul",[s("li",[t._v("整型")]),t._v(" "),s("li",[t._v("浮点型")]),t._v(" "),s("li",[t._v("布尔型")]),t._v(" "),s("li",[t._v("字符串型")])])]),t._v(" "),s("li",[s("p",[t._v("复合数据类型")]),t._v(" "),s("ul",[s("li",[t._v("数组型")]),t._v(" "),s("li",[t._v("对象型")])])]),t._v(" "),s("li",[s("p",[t._v("特殊数据类型")]),t._v(" "),s("ul",[s("li",[t._v("资源型：数据库资源/文件资源")]),t._v(" "),s("li",[t._v("空型")])])]),t._v(" "),s("li",[s("p",[t._v("var_dump()可查看数据类型和结果详情")])]),t._v(" "),s("li",[s("p",[t._v("负数最小值：-PHP_INT_MAX -1")])]),t._v(" "),s("li",[s("p",[t._v("浮点数：科学计数法为浮点，超过最大整型的数，不精确")])]),t._v(" "),s("li",[s("p",[t._v("布尔型不区分大小写")])]),t._v(" "),s("li",[s("p",[t._v("字符串型：用''、\"\"、<<<定界符(用于多行字符串,保留格式)")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//EOT可自取名,'EOT'表示单引号字符串")]),t._v("\n$str"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EOT")]),t._v("\n    $str1\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EOT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n        Copied"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    \n")])])]),s("p",[t._v("1\n2\n3\n4")])]),t._v(" "),s("li",[s("p",[t._v("单引号字符串只能解析'和\\")])]),t._v(" "),s("li",[s("p",[t._v("双引号字符串可以解析转义多种，"),s("code",[t._v('\\$,\\",\\\\,\\r\\n,\\t,\\变量（直接输出值）')]),t._v("可解析变量")])]),t._v(" "),s("li",[s("p",[t._v("解析字符串中的变量：1.用空格隔开 2.用{变量} 推荐使用{}")])]),t._v(" "),s("li",[s("p",[t._v("定界符内的内容都是字符串包括注释，定界符格式严格不能有多余的符号")])])]),t._v(" "),s("h5",{attrs:{id:"php-数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-数组"}},[t._v("#")]),t._v(" php 数组")]),t._v(" "),s("ul",[s("li",[t._v("多个元素的序列组成，键值对")]),t._v(" "),s("li",[t._v("索引都为数字：索引数组")]),t._v(" "),s("li",[t._v("索引都是字符串：关联数组")]),t._v(" "),s("li",[t._v("混合数组，不推荐使用")]),t._v(" "),s("li",[t._v("通常保存相关数据，逗号隔开")]),t._v(" "),s("li",[t._v("定义数组 array（）或[]")]),t._v(" "),s("li",[t._v("只定义值，下标自动生成")]),t._v(" "),s("li",[t._v("指定下标 :'下标'=>值")]),t._v(" "),s("li",[t._v("通过下标访问元素")]),t._v(" "),s("li",[t._v("添加元素：数组名[],自动下标再赋值，数组名[下标]，固定下标赋值")]),t._v(" "),s("li",[t._v("删除元素：unset($arr[1]),删除$arr[1],unset($arr),删除整个数组")]),t._v(" "),s("li",[t._v("多维数组$arr[0][2],二维数组：一维索引，二维关联")])]),t._v(" "),s("h4",{attrs:{id:"类型判定"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型判定"}},[t._v("#")]),t._v(" 类型判定")]),t._v(" "),s("ul",[s("li",[t._v("is_数据类型，判断类型，返回布尔型")]),t._v(" "),s("li",[t._v("is_numeric,是否能转成数值")]),t._v(" "),s("li",[t._v("is_scalar,是否为标量（基础类型）")])]),t._v(" "),s("h4",{attrs:{id:"php-类型转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-类型转换"}},[t._v("#")]),t._v(" php 类型转换")]),t._v(" "),s("ul",[s("li",[t._v("自动转换（方便），不改变数据本身")]),t._v(" "),s("li",[t._v("强制转换（效率高），资源和 null 不能强制转换\n"),s("ul",[s("li",[t._v("（类型）$a,强制转换对应类型，不改变原来值")]),t._v(" "),s("li",[t._v("settype(变量，'目标类型'),改变原来值")]),t._v(" "),s("li",[t._v("类型\n"),s("ul",[s("li",[t._v("integer")]),t._v(" "),s("li",[t._v("float")]),t._v(" "),s("li",[t._v("bool")]),t._v(" "),s("li",[t._v("string")]),t._v(" "),s("li",[t._v("array")]),t._v(" "),s("li",[t._v("object")])])])])]),t._v(" "),s("li",[t._v("空类型都为 false，'0'也为 false 不同与 js")])]),t._v(" "),s("h4",{attrs:{id:"运算符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),s("ul",[s("li",[t._v("大多与其他语言一致")]),t._v(" "),s("li",[t._v("错误抑制符、合并运算符、位运算符\n"),s("ul",[s("li",[t._v("错误抑制符：@，只需要可能出现错误的表达式前使用，只针对最近目标，如果针对结果（过程）需使用（），只能抑制"),s("strong",[t._v("简单错误")]),t._v("，不让它显示出来，抑制低级错误，不影响代码执行")]),t._v(" "),s("li",[t._v("合并运算符：?? eg: $a ?? b 简单的判断数据存在性的判断,$a 不存在则使用 b 的值,判断的数据不是那么重要，表达式 1？：表达式 3====表达式 1 ？？ 表达式 3，不一定等价，？？判断存在？：判断是否为真")])])]),t._v(" "),s("li",[t._v("飞船运算：<=>,比较运算符左边大于右边返回 1，等于返回 0，小于返回-1，字符串逐位比较不管长度")]),t._v(" "),s("li",[s("code",[t._v("$a=false or die('错误')")]),t._v("$a 为 false 则不运行")])]),t._v(" "),s("h3",{attrs:{id:"流程控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#流程控制"}},[t._v("#")]),t._v(" 流程控制")]),t._v(" "),s("ol",[s("li",[t._v("顺序结构")]),t._v(" "),s("li",[t._v("分支结构")]),t._v(" "),s("li",[t._v("循环结构")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("分支结构")]),t._v(" "),s("ul",[s("li",[t._v("考虑不同情形实现分块执行，有可能只有一个代码块")]),t._v(" "),s("li",[t._v("if 分支，互斥，"),s("strong",[t._v("最多执行一个代码块")])]),t._v(" "),s("li",[t._v("switch 分支，可以选择多块执行，条件是具体的")])])]),t._v(" "),s("li",[s("p",[t._v("while 循环：不确定循环次数")])]),t._v(" "),s("li",[s("p",[t._v("for 循环：确定次数")])]),t._v(" "),s("li",[s("p",[t._v("foreach："),s("strong",[t._v("专门遍历数组")]),t._v(",可以不获取下标，极少用于一维数组，多用于多维数组")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foreach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("数组变量 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("下标变量")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 值变量"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过下标变量读取变量下标")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过值变量读取每个元素值")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n        Copied"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    \n")])])]),s("p",[t._v("1\n2\n3\n4")])]),t._v(" "),s("li",[s("p",[t._v("do-while：先执行一次")])]),t._v(" "),s("li",[s("p",[t._v("循环条件需要可变")])]),t._v(" "),s("li",[s("p",[t._v("循环控制：控制循环体内代码执行方向")]),t._v(" "),s("ul",[s("li",[t._v("continue，直接进行下一次循环，层级默认为 1，多个 continue 可跳多层")]),t._v(" "),s("li",[t._v("break，直接跳出此循环，默认层级 1，多写多跳")])])])]),t._v(" "),s("h4",{attrs:{id:"标签语法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标签语法"}},[t._v("#")]),t._v(" 标签语法")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("php 嵌入 html")])]),t._v(" "),s("li",[s("p",[t._v("标签都写在 php 里不利前端维护")])]),t._v(" "),s("li",[s("p",[t._v("解决方案：有 php 用 php，不是 php 就不用 php 代码块")])]),t._v(" "),s("li",[s("p",[t._v("分支出现{用：代替，}用 end+标记内容，代替")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("table"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("php\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("php\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("td"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("php\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("$i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          echo "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$j*$i='")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$j"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("$i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("td"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("php endfor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("tr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("php endfor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n \n        Copied"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    \n")])])]),s("p",[t._v("1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18")])])]),t._v(" "),s("h3",{attrs:{id:"php-函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#php-函数"}},[t._v("#")]),t._v(" php 函数")]),t._v(" "),s("ul",[s("li",[t._v("一处维护，多处使用")]),t._v(" "),s("li",[t._v("过程一样，时机不同")]),t._v(" "),s("li",[t._v("模块化编程，每个模块使用函数编程，代码复用")]),t._v(" "),s("li",[t._v("定义方式同其他脚本语言")]),t._v(" "),s("li",[t._v("一次定义无限使用")]),t._v(" "),s("li",[t._v("函数在栈区运行（效率高），结束时释放栈区内存")]),t._v(" "),s("li",[t._v("代码读取，代码编译，代码加载，代码执行，执行结束释放脚本内存（包括代码段）")]),t._v(" "),s("li",[t._v("形参与外部任何变量无关")]),t._v(" "),s("li",[t._v("形参假设运算，代替外部实际参数")]),t._v(" "),s("li",[t._v("实参可以是数据，也可以是保存数据的表达式、常量、函数")]),t._v(" "),s("li",[t._v("形参默认值\n"),s("ul",[s("li",[t._v("默认值为最常见的值，有实参则不使用默认值"),s("code",[t._v("($n=9)")]),t._v("，(参数=默认值)，默认值调用时赋值")])])]),t._v(" "),s("li",[t._v("传值方式：值传递（不改变数据本身）、引用传值（改变数据本身，只能为变量）")]),t._v(" "),s("li",[t._v("return 会强制结束函数，是否需要运算结果，可以返回任何数据类型")]),t._v(" "),s("li",[t._v("函数规则：\n"),s("ul",[s("li",[t._v("命名规则\n"),s("ul",[s("li",[t._v("不区分大小写，不能出现同名函数（同一脚本中）")]),t._v(" "),s("li",[t._v("驼峰法命名同变量，下划线开头（较多）")]),t._v(" "),s("li",[t._v("函数颗粒度小，功能小，大问题用小函数一个个解决")]),t._v(" "),s("li",[t._v("函数体基本不进行输出操作，如果有数据通常通过返回给调用，只负责运算")])])])])])]),t._v(" "),s("h4",{attrs:{id:"函数高级"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数高级"}},[t._v("#")]),t._v(" 函数高级")]),t._v(" "),s("ul",[s("li",[t._v("函数作用域\n"),s("ul",[s("li",[t._v("局部变量、全局变量、超全局变量、跨域访问")]),t._v(" "),s("li",[t._v("局部变量\n"),s("ul",[s("li",[t._v("形参属于局部变量，只能在局部访问（函数内），引用属于外部变量和局部变量公用一个内存地址")])])]),t._v(" "),s("li",[t._v("全局变量（函数外部）\n"),s("ul",[s("li",[t._v("可传值给形参，给局部变量使用")]),t._v(" "),s("li",[s("strong",[t._v("全局变量不能在局部访问")]),t._v("，不同于 js")]),t._v(" "),s("li",[t._v("全局作用域和局部作用域不交叉")]),t._v(" "),s("li",[t._v("用局部变量接收全局变量")])])]),t._v(" "),s("li",[t._v("超全局变量\n"),s("ul",[s("li",[s("strong",[t._v("可在任何位置访问，不限制作用域")])]),t._v(" "),s("li",[s("strong",[t._v("可通过$GLOBALS，访问全局变量 eg：$GLOBALS['全局变量名']")])]),t._v(" "),s("li",[t._v("可通过超全局变量$GLOBALS（自己包含自己）定义全局变量$GLOBALS['b']=5")]),t._v(" "),s("li",[t._v("一般只用来访问，不建议用来定义全局变量")])])])])]),t._v(" "),s("li",[t._v("跨作用域访问\n"),s("ul",[s("li",[t._v("不同作用域之间访问")]),t._v(" "),s("li",[t._v("函数内使用 global 关键字声明（只能），引变量，也可以修改外部值，同一地址")]),t._v(" "),s("li",[t._v("global 声明的是全局变量，局部作用域声明全局变量")])])])]),t._v(" "),s("h4",{attrs:{id:"静态变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态变量"}},[t._v("#")]),t._v(" 静态变量")]),t._v(" "),s("ul",[s("li",[t._v("在函数内部定义")]),t._v(" "),s("li",[t._v("可在多次调用时公用局部变量")]),t._v(" "),s("li",[t._v("使用 static 关键字修饰")]),t._v(" "),s("li",[t._v("在函数加载时只初始化一次（加载到内存时执行），同一函数共享数据")]),t._v(" "),s("li",[t._v("多次调用时共享的数据可设为静态变量")]),t._v(" "),s("li",[t._v("数据需要函数多次调用共享数据，可以使用")]),t._v(" "),s("li",[t._v("在函数使用递归存储数据的时候，可以使用")])]),t._v(" "),s("h4",{attrs:{id:"强类型参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#强类型参数"}},[t._v("#")]),t._v(" 强类型参数")]),t._v(" "),s("ul",[s("li",[t._v("在定义函数时给形参设定类型")]),t._v(" "),s("li",[t._v("保护函数运行逻辑正确")]),t._v(" "),s("li",[t._v("定义强类型"),s("code",[t._v("function add(float $a,float $b){}")])]),t._v(" "),s("li",[t._v("规定传入参数类型")]),t._v(" "),s("li",[t._v("不想再内部进行多判断，可以使用强类型参数")]),t._v(" "),s("li",[t._v("返回值，定义好返回的类型"),s("code",[t._v("function add(float $a,float $b):bool{}")]),t._v("，boolean 为对象")]),t._v(" "),s("li",[t._v("开启强类型检查"),s("code",[t._v("declare(strict_type=1)")]),t._v(",返回值才会强制检查必须为返回类型，不加则只会强制转换")])]),t._v(" "),s("h4",{attrs:{id:"可变参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可变参数"}},[t._v("#")]),t._v(" 可变参数")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("不固定参数的设置")])]),t._v(" "),s("li",[s("p",[t._v("在形参前面加...")])]),t._v(" "),s("li",[s("p",[t._v("function add($a,$b,...$args){},可变参数接收多余参数为数组")])]),t._v(" "),s("li",[s("p",[t._v("形参中可以定义可变参数，吸收多余实参变成数组")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("$b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("$args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  $sum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("$a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("$b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foreach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$args "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" $v")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    $sum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v("$v"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n \n        Copied"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    \n")])])]),s("p",[t._v("1\n2\n3\n4\n5\n6")])]),t._v(" "),s("li",[s("p",[t._v("将实参拆分为多个数据的数组，将数据解构成多个参数")])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("$b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" $a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("$b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n$arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\necho "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("$arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出14")]),t._v("\n \n        Copied"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    \n")])])]),s("p",[t._v("1\n2\n3\n4\n5")]),t._v(" "),s("h4",{attrs:{id:"可变函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可变函数"}},[t._v("#")]),t._v(" 可变函数")]),t._v(" "),s("ul",[s("li",[t._v("用变量保存的值刚好是另一个函数的名字，那么可以通过变量 直接访问函数")]),t._v(" "),s("li",[t._v("变量"),s("strong",[t._v("值")]),t._v("为函数名（字符串）， 变量（）访问函数")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  echo "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n$"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n$"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出1")]),t._v("\n \n        Copied"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    \n")])])]),s("p",[t._v("1\n2\n3\n4\n5")]),t._v(" "),s("ul",[s("li",[t._v("实际用于将自定义函数作为其他位置的回调函数 callback 使用")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("$b")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" $a"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("$b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("$d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("$fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$fun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("$d"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\necho "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出11")]),t._v("\n \n        Copied"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    \n")])])]),s("p",[t._v("1\n2\n3\n4\n5\n6\n7")]),t._v(" "),s("ul",[s("li",[t._v("函数名要存在")])]),t._v(" "),s("h4",{attrs:{id:"匿名函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匿名函数"}},[t._v("#")]),t._v(" 匿名函数")]),t._v(" "),s("ul",[s("li",[t._v("定义时函数没有名字")]),t._v(" "),s("li",[t._v("使用变量保存函数的内存地址")]),t._v(" "),s("li",[t._v("通过变量访问函数")]),t._v(" "),s("li",[t._v("变量=function (){return 值;};变量赋值需要加分号")])]),t._v(" "),s("h4",{attrs:{id:"回调匿名函数-js-常用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回调匿名函数-js-常用"}},[t._v("#")]),t._v(" 回调匿名函数（js 常用）")]),t._v(" "),s("ul",[s("li",[t._v("直接将匿名函数定义在函数的实参中，当作实参传递")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("$arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cube")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("$cube")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  $list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("foreach")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$arr "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" $value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    $list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$cube")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" $list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cube")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("$arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("cube")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$num")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" $num "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//num的3次方")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n \n        Copied"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    \n")])])]),s("p",[t._v("1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11")]),t._v(" "),s("ul",[s("li",[t._v("让变量保存函数并进行调用，"),s("strong",[t._v("且调用后立即销毁，包括代码段")])])]),t._v(" "),s("h4",{attrs:{id:"匿名函数闭包-匿名函数内部使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匿名函数闭包-匿名函数内部使用"}},[t._v("#")]),t._v(" 匿名函数闭包（匿名函数内部使用）")]),t._v(" "),s("ul",[s("li",[t._v("定义在函数内，能够读取其他函数内部变量的匿名函数（闭包函数）")]),t._v(" "),s("li",[t._v("函数定义在某个函数内部（内部函数）")]),t._v(" "),s("li",[t._v("内部函数是匿名函数")]),t._v(" "),s("li",[t._v("内部函数访问外部函数的局部变量\n"),s("ul",[s("li",[t._v("不能直接访问")]),t._v(" "),s("li",[t._v("访问使用 use")]),t._v(" "),s("li",[t._v("匿名函数内用"),s("strong",[t._v("FUNCTION")]),t._v("会返回闭包，而非函数名")])])])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("out")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用use 声明$str为外部函数的变量")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("$inner")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("use")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("$str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    echo $str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("$inner")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("out")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//输出hello")]),t._v("\n \n        Copied"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n    \n")])])]),s("p",[t._v("1\n2\n3\n4\n5\n6\n7\n8")]),t._v(" "),s("ul",[s("li",[t._v("闭包函数可以返回给外部函数调用，这样可以使得闭包所占用的外部函数资源不会被释放（即闭包函数内部使用的外部数据，类静态变量）")]),t._v(" "),s("li",[t._v("闭包函数资源占用，闭包返回给外部还需使用不释放资源")])]),t._v(" "),s("h4",{attrs:{id:"系统函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#系统函数"}},[t._v("#")]),t._v(" 系统函数")]),t._v(" "),s("ul",[s("li",[t._v("系统函数效率比自己封装的高")]),t._v(" "),s("li",[t._v("通过 api 文档查看")]),t._v(" "),s("li",[t._v("通过索引查看")]),t._v(" "),s("li",[t._v("通过搜索查看")])]),t._v(" "),s("h4",{attrs:{id:"伪类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#伪类型"}},[t._v("#")]),t._v(" 伪类型")]),t._v(" "),s("ul",[s("li",[t._v("未必一定存在的类型")]),t._v(" "),s("li",[t._v("number 数值，浮点整型")]),t._v(" "),s("li",[t._v("scalar 标量，php4 种基本类型")]),t._v(" "),s("li",[t._v("mixed 混合，没有明确类型")]),t._v(" "),s("li",[t._v("callable 可调用，说明是函数名")])]),t._v(" "),s("h4",{attrs:{id:"常用系统函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用系统函数"}},[t._v("#")]),t._v(" 常用系统函数")]),t._v(" "),s("ul",[s("li",[t._v("输出类\n"),s("ul",[s("li",[t._v("echo 一种语法结构，不是函数，不需要括号")]),t._v(" "),s("li",[t._v("print_r 输出变量结构，方便查看")]),t._v(" "),s("li",[t._v("var_dump 详细打印变量的结构和数据")]),t._v(" "),s("li",[t._v("exit/die 输出消息并终止脚本运行")])])]),t._v(" "),s("li",[t._v("时间日期类\n"),s("ul",[s("li",[t._v("time 获取当前时间戳（10 位）")]),t._v(" "),s("li",[t._v("date 按照指定格式输出时间，可以是当前或者指定时间戳")]),t._v(" "),s("li",[t._v("strtotime 将任何英文文本日期时间转换为时间戳")]),t._v(" "),s("li",[t._v("microtime 获取时间戳和微秒数")])])]),t._v(" "),s("li",[t._v("数学类\n"),s("ul",[s("li",[t._v("max 多个中最大")]),t._v(" "),s("li",[t._v("min 多个中最小")]),t._v(" "),s("li",[t._v("floor 下取整")]),t._v(" "),s("li",[t._v("ceil 上取整")]),t._v(" "),s("li",[t._v("mt_rand 获取指定区间或者 0 到最大数之间的一个随机整数")]),t._v(" "),s("li",[t._v("round 指定小时位进行四舍五入")])])]),t._v(" "),s("li",[t._v("字符串类\n"),s("ul",[s("li",[t._v("addslashes 对 ASCII 中的特殊字符进行转义。通常对用户输入内容进行处理（防止 sql 注入）")]),t._v(" "),s("li",[t._v("htmlsmpecialchars 将 html 特殊符号转换成普通字符")]),t._v(" "),s("li",[t._v("htmlspecialchars_decode 将实体字符转换为普通字符")]),t._v(" "),s("li",[t._v("chr 将 ASCII 对应的数值转换对应的符号")]),t._v(" "),s("li",[t._v("ord 将 ASCII 字符转换对应的数值")]),t._v(" "),s("li",[t._v("explode 将字符串按照指定符号分割，得到数组")]),t._v(" "),s("li",[t._v("implode 将一个数组按指定的符号连接成字符串")]),t._v(" "),s("li",[t._v("md5 使用 md5 算法对数据加密")]),t._v(" "),s("li",[t._v("str_repeat 将字符串重复指定次数")]),t._v(" "),s("li",[t._v("str_replace 字符串替换")]),t._v(" "),s("li",[t._v("str_shuffle 随机打乱一个字符串")]),t._v(" "),s("li",[t._v("str_split 按照指定长度将数组分割，返回数组")]),t._v(" "),s("li",[t._v("strip_tags 去除 html 和 php 标记")]),t._v(" "),s("li",[t._v("strlen 获取字符串的长度（字节长度），mb_strlen（字符长度）")]),t._v(" "),s("li",[t._v("stripos/strpos 查找字符串中首次出现的位置")]),t._v(" "),s("li",[t._v("substr 从字符串中截取指定位置和长度的子字符串")]),t._v(" "),s("li",[t._v("trim 去除字符串两边的空格")]),t._v(" "),s("li",[t._v("ucfirst 字符串首字母大写")]),t._v(" "),s("li",[t._v("strtolower 所有字母小写")]),t._v(" "),s("li",[t._v("strtoupper 所有字母大写")]),t._v(" "),s("li",[t._v("strstr 获取字符串中某个字符首次出现直到最后的字符串")])])]),t._v(" "),s("li",[t._v("数组类\n"),s("ul",[s("li",[t._v("array_key_exists 判断下标释放在数组中存在")]),t._v(" "),s("li",[t._v("array_keys 获取数组全部下标，或某个确定值的下标")]),t._v(" "),s("li",[t._v("array_merge 合并数组元素（相同字符串下标元素覆盖）")]),t._v(" "),s("li",[t._v("array_pop 弹出数组最后一个元素（原数组改变）")]),t._v(" "),s("li",[t._v("array_push 压入一个元素到数组最后（改变数组）")]),t._v(" "),s("li",[t._v("array_unshift 数组最前面插入一个元素（改变）")]),t._v(" "),s("li",[t._v("array_shift 数组最前面弹出一个元素（改变）")]),t._v(" "),s("li",[t._v("shuffle 将原始数组打乱")]),t._v(" "),s("li",[t._v("in_array 判断元素释放在数组中")]),t._v(" "),s("li",[t._v("range 生成一个规则数值的数组")]),t._v(" "),s("li",[t._v("current 获取当前数组指针所在位置的值")]),t._v(" "),s("li",[t._v("next 将数组元素指针后移一位，并获取新元素的值")]),t._v(" "),s("li",[t._v("prev 与 next 相反")]),t._v(" "),s("li",[t._v("end 指针移动到最后一个元素，并获取值")]),t._v(" "),s("li",[t._v("reset 重置数组指针，回到第一个元素")]),t._v(" "),s("li",[t._v("list 语法结构，从数组中获取数据，并且将数据赋值给变量")])])])]),t._v(" "),s("h3",{attrs:{id:"文件包含"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件包含"}},[t._v("#")]),t._v(" 文件包含")]),t._v(" "),s("ul",[s("li",[t._v("已有的代码以文件的形式包含到某个指定代码中")]),t._v(" "),s("li",[t._v("多个文件变成一个整体")]),t._v(" "),s("li",[t._v("使用被包含文件的内容")]),t._v(" "),s("li",[t._v("提升开发效率")]),t._v(" "),s("li",[t._v("提供代码复用")]),t._v(" "),s("li",[t._v("利于代码维护")]),t._v(" "),s("li",[t._v("被请求文件执行代码产生数据或者结构")]),t._v(" "),s("li",[t._v("小规模开发大规模应用")])]),t._v(" "),s("h4",{attrs:{id:"文件包含实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件包含实现"}},[t._v("#")]),t._v(" 文件包含实现")]),t._v(" "),s("ul",[s("li",[t._v("include （'文件名'），括号可有可无（不重要文件）")]),t._v(" "),s("li",[t._v("require '文件名'，（只在找不到时有区别）（重要文件）")]),t._v(" "),s("li",[t._v("include_ince '文件名'")]),t._v(" "),s("li",[t._v("require_once '文件名'")]),t._v(" "),s("li",[t._v("给不同文件提供不同内容")]),t._v(" "),s("li",[t._v("提供、模板、处理数据")]),t._v(" "),s("li",[t._v("先包含（使用被包含文件的数据或者结构）、后包含（将当前所有数据给被包含文件使用，通常用于显示数据，用 php 标签和语法来输出数据）")]),t._v(" "),s("li",[t._v("包含方式区别\n"),s("ul",[s("li",[t._v("include 报警告错误继续运行")]),t._v(" "),s("li",[t._v("require 报致命错误终止运行（安全、建议）")]),t._v(" "),s("li",[t._v("无 once 多次包含会加载多次，_once 加载一次安全效率低（不建议）")])])])]),t._v(" "),s("h4",{attrs:{id:"文件包含原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件包含原理"}},[t._v("#")]),t._v(" 文件包含原理")]),t._v(" "),s("ul",[s("li",[t._v("本质就是将包含文件放到对应位置的代码")]),t._v(" "),s("li",[t._v("php 代码直接放")]),t._v(" "),s("li",[t._v("非 php 代码，放到位置，但是 php 不会进行解析")]),t._v(" "),s("li",[t._v("文件包含的代码是在执行阶段进行解析")]),t._v(" "),s("li",[t._v("编译阶段不会将文件包含加载进来")]),t._v(" "),s("li",[t._v("被包含文件运行时独立编译")]),t._v(" "),s("li",[t._v("执行的时候才会知道错误")]),t._v(" "),s("li",[t._v("包含出错只会影响后续代码")])]),t._v(" "),s("h4",{attrs:{id:"文件包含路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文件包含路径"}},[t._v("#")]),t._v(" 文件包含路径")]),t._v(" "),s("ul",[s("li",[t._v("绝对路径（效率低，准确度高建议）\n"),s("ul",[s("li",[t._v("本地绝对路径，磁盘")]),t._v(" "),s("li",[t._v("网络绝对路径 url（php 默认不支持）")])])]),t._v(" "),s("li",[t._v("相对路径\n"),s("ul",[s("li",[t._v("当前目录./,默认当前文件路径（建议直接文件名，不建议./）")]),t._v(" "),s("li",[t._v("上级目录../")])])])]),t._v(" "),s("h3",{attrs:{id:"嵌套包含路径问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#嵌套包含路径问题"}},[t._v("#")]),t._v(" 嵌套包含路径问题")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("在进行文件包含时使用了相对路径（./或../）,而且文件又又嵌套包含，导致./或者../无法正确识别路径")])]),t._v(" "),s("li",[t._v("每个文件夹下都有./和../")]),t._v(" "),s("li",[t._v("嵌套包含会让系统无法正确原文件中./和../从哪里开始")]),t._v(" "),s("li",[t._v("系统永远从当前工作目录的./和../开始寻找")])]),t._v(" "),s("p",[t._v("评论")])])}),[],!1,null,null,null);a.default=_.exports}}]);